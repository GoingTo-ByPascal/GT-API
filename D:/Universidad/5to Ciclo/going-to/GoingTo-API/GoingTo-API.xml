<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GoingTo-API</name>
    </assembly>
    <members>
        <member name="M:GoingTo_API.Controllers.AchievementController.GetAllAsync">
            <summary>
            Returns all the achievements in the system.
            </summary>
            <response code="200">Returns all the achievements in the system.</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.AchievementController.PostAsync(GoingTo_API.Resources.SaveAchievementResource)">
            <summary>
            Creates an achievements in the system.
            </summary>
            <response code="201">Creates an achievements in the system.</response>
            <response code="400">Unable to create the achievement due to validation.</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.AchievementController.UpdateAsync(System.Int32,GoingTo_API.Resources.SaveAchievementResource)">
            <summary>
            Allows to change the Name,Text and/or Points of an existing achievement
            </summary>
            <param name="id">The id of the achievement to update</param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CategoriesController.GetAllAsync">
            <summary>
            returns all the categories in the system
            </summary>
            <response code="200">returns all the categories in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CategoriesController.GetAsync(System.Int32)">
            <summary>
            returns a category by id
            </summary>
            <param name="id" example="1"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CategoriesController.PostAsync(GoingTo_API.Resources.SaveCategoryResource)">
            <summary>
            add a category in the system
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CategoriesController.PutAsync(System.Int32,GoingTo_API.Resources.SaveCategoryResource)">
            <summary>
            update a category in the system
            </summary>
            <param name="id" example="1"></param>
            <param name="resource" example="Turismo aventurero"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CategoriesController.DeleteAsync(System.Int32)">
            <summary>
            delete a category in the system
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CitiesController.GetAllAsync">
            <summary>
            Returns all the cities in the system
            </summary>
            <response code="200">Returns all the cities in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CitiesController.GetAsync(System.Int32)">
            <summary>
            Returns one city by id
            </summary>
            <param name="id" example="1">The city id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CityPlacesController.GetAllByCityIdAsync(System.Int32)">
            <summary>
            Returns all the places of one city in the system.
            </summary>
            <param name="cityId">The city id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountriesController.GetAllAsync">
            <summary>
            Returns all the countries in the system
            </summary>
            <response code="200">Returns all the countries in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountriesController.GetByIdAsync(System.Int32)">
            <summary>
            Returns a country by searching in id
            </summary>
            <param name="id" example="1">The country id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryCitiesController.GetAllByCountryIdAsync(System.Int32)">
            <summary>
            Returns all the cities in one country
            </summary>
            <param name="countryId" example = "1">Country Id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryCurrenciesController.AssignCountryCurrency(System.Int32,System.Int32)">
            <summary>
            Assign a currency to a country
            </summary>
            <param name="countryId">CountryId</param>
            <param name="currencyId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryCurrenciesController.UnassignCountryCurrency(System.Int32,System.Int32)">
            <summary>
            unassign a currency to a country
            </summary>
            <param name="countryId"></param>
            <param name="currencyId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryLanguagesController.GetAllByCountryIdAsync(System.Int32)">
            <summary>
            Returns all the languages of one country in the system.
            </summary>
            <param name="countryId">The country id</param>
            <response code="200">Returns all the languages of one country in the system. </response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryLanguagesController.AssignCountryLanguage(System.Int32,System.Int32)">
            <summary>
            Assign a language to a country
            </summary>
            <param name="countryId"></param>
            <param name="languageId"></param>
            /// <response code="204">The language was asigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CountryLanguagesController.UnasignCountryLanguage(System.Int32,System.Int32)">
            <summary>
            Delete a language from one country
            </summary>
            <param name="countryId"></param>
            <param name="languageId"></param>
            <response code="204">The language was unasigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CurrenciesController.GetAllAsync">
            <summary>
            Return all the currencies on the system
            </summary>
            <response code="200">Returns all the Currencies in the system.</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CurrenciesController.GetAsync(System.Int32)">
            <summary>
            Return a currency by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.CurrenciesController.PostAsync(GoingTo_API.Resources.SaveCurrencyResource)">
            <summary>
            Create a currency on the system
            </summary>
            <param name="resource"></param>
            <response code="201">Creates a Currency in the system.</response>
            <response code="400">Unable to create the Currency due to validation.</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.FavouritesController.GetAllByUserIdAsync(System.Int32)">
            <summary>
            Returns all the favourites locatables of one user in the system.
            </summary>
            <param name="userId">The user id</param>
            <response code="200">Returns all the favourites locatables of one user in the system. </response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.FavouritesController.AssignFavourite(System.Int32,System.Int32)">
            <summary>
            add a locatable to the user's favorites collection.
            </summary>
            <param name="userId"  example="1"></param>
            <param name="locatableId"  example="1"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.FavouritesController.UnassignFavourite(System.Int32,System.Int32)">
            <summary>
            Delete a favourite locatable from one user
            </summary>
            <param name="userId"></param>
            <param name="locatableId"></param>
            <response code="204">The favourite locatable was unasigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LanguagesController.GetAllAsync">
            <summary>
            Returns all the languages in the system
            </summary>
            <response code="200">Returns all the languages in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LanguagesController.GetAsync(System.Int32)">
            <summary>
            Returns one language by id
            </summary>
            <param name="id" example="1">The language id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LanguagesController.PostAsync(GoingTo_API.Resources.SaveLanguageResource)">
            <summary>
            Creates a language in the system.
            </summary>
            <response code="201">Creates a language in the system.</response>
            <response code="400">Unable to create the language due to validation.</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LanguagesController.PutAsync(System.Int32,GoingTo_API.Resources.SaveLanguageResource)">
            <summary>
            Allows to change the ShortName and/or FullName of an existing Language
            </summary>
            <param name="id">The id of the language to update</param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableReviewsController.GetReviewsByLocatableIdAsync(System.Int32)">
            <summary>
            returns all reviews of a locatable in the system
            </summary>
            <response code="200">returns all reviews of a locatable in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableReviewsController.PostAsync(System.Int32,GoingTo_API.Resources.SaveReviewResource,System.Int32)">
            <summary>
            creates a review for a Locatable in the system.
            </summary>
            <param name="locatableId"></param>
            <param name="resource"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableReviewsController.PutAsync(System.Int32,System.Int32,GoingTo_API.Resources.SaveReviewResource)">
            <summary>
            allows to change the Comment and Stars an existing Review
            </summary>
            <param name="locatableId"></param>
            <param name="reviewId">the id of the Review to update</param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableReviewsController.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            delete a review from one locatable
            </summary>
            <param name="locatableId"></param>
            <param name="reviewId"></param>
            <response code="204">the review was unasigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatablesController.GetAllAsync">
            <summary>
            Returns all the locatables in the system
            </summary>
            <response code="200">Returns all the locatables in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatablesController.GetByIdAsync(System.Int32)">
            <summary>
            returns one locatable by id
            </summary>
            <param name="id" example="1">The locatable id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableTipsController.GetTipsByLocatableIdAsync(System.Int32)">
            <summary>
            returns all tips of a locatable in the system
            </summary>
            <response code="200">returns all tips of a locatable in the system</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableTipsController.PostAsync(System.Int32,GoingTo_API.Resources.SaveTipResource)">
            <summary>
            creates a Tip for a Locatable in the system.
            </summary>
            <param name="locatableId"></param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableTipsController.PutAsync(System.Int32,System.Int32,GoingTo_API.Resources.SaveTipResource)">
            <summary>
            allows to change the Text an existing Tip
            </summary>
            <param name="locatableId"></param>
            <param name="tipId">the id of the Tip to update</param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.LocatableTipsController.DeleteAsync(System.Int32,System.Int32)">
            <summary>
            delete a tip from one locatable
            </summary>
            <param name="locatableId"></param>
            <param name="tipId"></param>
            <response code="204">the tip was unasigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlaceCategoriesController.GetAllByPlaceIdAsync(System.Int32)">
            <summary>
            returns all the place's categories
            </summary>
            <param name="placeId" example="1"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlaceCategoriesController.AssignPlaceCategory(System.Int32,System.Int32)">
            <summary>
            assign a category to one place
            </summary>
            <param name="placeId" example="1"></param>
            <param name="categoryId" example="1"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlaceCategoriesController.UnasignPlaceCategory(System.Int32,System.Int32)">
            <summary>
            unnasign a category from one place
            </summary>
            <param name="placeId" example="1"></param>
            <param name="categoryId" example="1"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlacesController.GetAllAsync">
            <summary>
            Returns al the places in the system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlacesController.PostAsync(GoingTo_API.Resources.SavePlaceResource)">
            <summary>
            Creates a place in the system
            </summary>
            <param name="resource">A place resource</param>
            <response code="201">Creates a place in the system</response>
            <response code="400">Unable to create the place due validation</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlacesController.FindById(System.Int32)">
            <summary>
            Returns one place  by id
            </summary>
            <param name="id" example="1">The place Id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.PlacesController.UpdateAsync(System.Int32,GoingTo_API.Resources.SavePlaceResource)">
            <summary>
            Allows to change the name of a place
            </summary>
            <param name="id"></param>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.ReviewsController.GetAsync(System.Int32)">
            <summary>
            returns one review  by id
            </summary>
            <param name="id" example="1">The review Id</param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.ReviewsController.PostAsync(GoingTo_API.Resources.SaveReviewResource)">
            <summary>
            creates a review in the system
            </summary>
            <param name="resource">A review resource</param>
            <response code="201">Creates a review in the system</response>
            <response code="400">Unable to create the review due validation</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.ReviewsController.PutAsync(System.Int32,GoingTo_API.Resources.SaveReviewResource)">
            <summary>
            updates a review in the system
            </summary>
            <param name="resource">A review resource</param>
            <param name="id">The id of the review to update</param>
            <response code="201">Updates a review in the system</response>
            <response code="400">Unable to update the review due validation</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.ReviewsController.DeleteAsync(System.Int32)">
            <summary>
            deletes a review in the system
            </summary>
            <response code="201">Deletes a review in the system</response>
            <response code="400">Unable to delete the review due validation</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.UserAchievementController.GetAllByUserIdAsync(System.Int32)">
            <summary>
            Returns all the achievements of an user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.UserAchievementController.AssignUserAchievement(System.Int32,System.Int32)">
            <summary>
            Assign an achievement to an users
            </summary>
            <param name="userId"></param>
            <param name="achievementId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.UserAchievementController.UnassignUserAchievement(System.Int32,System.Int32)">
            <summary>
            Delete an achivement from one user
            </summary>
            <param name="userId"></param>
            <param name="achievementId"></param>
            <response code="204">The achievement was unasigned successfully</response>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.UserReviewsController.GetAllByUserIdAsync(System.Int32)">
            <summary>
            Returns all the reviews of a user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GoingTo_API.Controllers.UsersController.GetAllAsync">
            <summary>
            Returns all the users on the system.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
